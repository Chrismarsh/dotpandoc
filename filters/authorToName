#!/usr/bin/env ruby
# This converts a simple author metadata field (author: Joanna Doe^1^) into seperate
# name & affiliation metadata fields that are better parsed by most Pandoc templates.
# It also ensures affiliations are properly specified.
# I prefer to do this the other way round, with richer metadata I then simplify
# for Word/LibreOffice using authorSimplifyMetadata filter; authorToName is deprecated.

require 'paru/filter'

auKey = 'author'
instKey = 'institute'
pKey = 'pandocomatic-fileinfo'

def checkSuperscript(input)
  cp = input.match(/\s?\^([\w\d\s\,§‡¶†\*]+)\^/)
  if cp.nil?
    Hash['name' => input]
  else
    Hash['name' => cp.pre_match, 'affiliation' => [cp[1].to_s]]
  end
end

def fixName(author)
  author = Hash['name' => author] if author.is_a?(String)
  unless author.key?('name') # convert first key id to name: key
    if author.values[0].is_a?(Hash)
      values = author.values[0]
      values['id'] = author.keys[0]
      values['name'] = values['id']
      author = values
    else
      author['name'] = 'Unknown'
    end
  end
  author
end

Paru::Filter.run do
  stop! unless metadata.key?('author')
  stop! if metadata.key?(pKey) & metadata[pKey]['to'].match(/docx|odt/)

  newAuthor = nil
  newInst = nil

  #============Standardise author fields
  authors = metadata[auKey]
  authors = [Hash['name' => authors]] if authors.is_a?(String)
  if authors.is_a?(Array)
    newAuthor = Array.new(authors.length, {})
    authors.each_with_index do |au, i|
      if au.is_a?(String) # just an array of strings, turn to array of hashes
        au = checkSuperscript(au)
        newAuthor[i] = fixName(au)
      elsif au.is_a?(Hash)
        newAuthor[i] = fixName(au)
      end
    end
  end

  #============Standardise institute fields
  inst = metadata[instKey]
  inst = [Hash[1 => inst]] if inst.is_a?(String)
  if inst.is_a?(Array)

  end
  #============Write our new data
  metadata[auKey] = newAuthor unless newAuthor.nil?
  metadata[instKey] = newInst unless newInst.nil?
  # just in case a template uses tags instead of keywords
  metadata['tags'] = metadata['keywords'] if metadata['keywords']
  # tell paru no more processing needed!
  stop!
end

